#pragma once

#include <Icetrix.h>

class Patches : public Icetrix::Layer::SimplePatcher
{
protected:
	virtual std::vector<Icetrix::Memory::PatternPatch*> GetPatches() { return patches; };

	std::vector<Icetrix::Memory::PatternPatch*>(patches) = {
		PP{"No Reload", { 0x89, 0x4C, 0x82, 0x20, 0x48, 0x8B, 0x0A }, { 0x89, 0x4C, 0x82, 0x20 }, { 0x90, 0x90, 0x90, 0x90 }},
		PP{"Unlimited Magazine", { 0x41, 0x29, 0xEC, 0x44, 0x89, 0x61, 0x20 }, { 0x41, 0x29, 0xEC }, { 0x90, 0x90, 0x90 }},
		PP{"Perfect Focus", { 0xF3, 0x0F, 0x58, 0x4B, 0x10, 0xF3, 0x0F, 0x11, 0x4B, 0x10, 0xF3, 0x0F, 0x11, 0x4B, 0x2C }, { 0xF3, 0x0F, 0x58, 0x4B, 0x10 }, { 0x90, 0x90, 0x90, 0x90, 0x90 }},
		PP{"Zoom Prediction AlwaysOn", { 0x74, 0x09, 0xC6, 0x05, 0x61, 0xE6, 0x43, 0xFF, 0x01 }, { 0x74, 0x09 }, { 0x90, 0x90 }},
	};
};
